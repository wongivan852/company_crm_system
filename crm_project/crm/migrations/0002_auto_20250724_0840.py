# Generated by Django 4.2.5 on 2025-07-24 08:40

from django.db import migrations, models
import django.core.validators
import uuid


def migrate_old_fields_to_new(apps, schema_editor):
    """Migrate data from old fields to new field structure"""
    Customer = apps.get_model('crm', 'Customer')
    
    for customer in Customer.objects.all():
        # Migrate email field to email_primary
        if hasattr(customer, 'email') and customer.email:
            customer.email_primary = customer.email
        
        # Migrate phone field to phone_primary
        if hasattr(customer, 'phone') and customer.phone:
            customer.phone_primary = customer.phone
            
        # Migrate company field to company_primary
        if hasattr(customer, 'company') and customer.company:
            customer.company_primary = customer.company
            
        # Migrate position field to position_primary
        if hasattr(customer, 'position') and customer.position:
            customer.position_primary = customer.position
            
        # Migrate address field to address_primary
        if hasattr(customer, 'address') and customer.address:
            customer.address_primary = customer.address
            
        customer.save()


class Migration(migrations.Migration):

    dependencies = [
        ('crm', '0001_initial'),
    ]

    operations = [
        # Add new fields first (without unique constraint initially)
        migrations.AddField(
            model_name='customer',
            name='email_primary',
            field=models.EmailField(blank=True, max_length=254, validators=[django.core.validators.EmailValidator()], help_text='Primary email address'),
        ),
        migrations.AddField(
            model_name='customer',
            name='email_secondary',
            field=models.EmailField(blank=True, max_length=254, validators=[django.core.validators.EmailValidator()], help_text='Secondary email address'),
        ),
        migrations.AddField(
            model_name='customer',
            name='phone_primary',
            field=models.CharField(blank=True, max_length=20, help_text='Primary phone number'),
        ),
        migrations.AddField(
            model_name='customer',
            name='phone_secondary',
            field=models.CharField(blank=True, max_length=20, help_text='Secondary phone number'),
        ),
        migrations.AddField(
            model_name='customer',
            name='fax',
            field=models.CharField(blank=True, max_length=20, help_text='Fax number'),
        ),
        migrations.AddField(
            model_name='customer',
            name='linkedin_profile',
            field=models.URLField(blank=True, validators=[django.core.validators.URLValidator()], help_text='LinkedIn profile URL'),
        ),
        migrations.AddField(
            model_name='customer',
            name='facebook_profile',
            field=models.URLField(blank=True, validators=[django.core.validators.URLValidator()], help_text='Facebook profile URL'),
        ),
        migrations.AddField(
            model_name='customer',
            name='twitter_handle',
            field=models.CharField(blank=True, max_length=100, help_text='Twitter/X handle (without @)'),
        ),
        migrations.AddField(
            model_name='customer',
            name='instagram_handle',
            field=models.CharField(blank=True, max_length=100, help_text='Instagram handle (without @)'),
        ),
        migrations.AddField(
            model_name='customer',
            name='country_region',
            field=models.CharField(blank=True, max_length=100, help_text='Country/Region'),
        ),
        migrations.AddField(
            model_name='customer',
            name='company_primary',
            field=models.CharField(blank=True, max_length=200, help_text='Current/Primary company'),
        ),
        migrations.AddField(
            model_name='customer',
            name='position_primary',
            field=models.CharField(blank=True, max_length=100, help_text='Current/Primary position'),
        ),
        migrations.AddField(
            model_name='customer',
            name='company_secondary',
            field=models.CharField(blank=True, max_length=200, help_text='Secondary/Previous company'),
        ),
        migrations.AddField(
            model_name='customer',
            name='position_secondary',
            field=models.CharField(blank=True, max_length=100, help_text='Secondary/Previous position'),
        ),
        migrations.AddField(
            model_name='customer',
            name='company_website',
            field=models.URLField(blank=True, validators=[django.core.validators.URLValidator()], help_text='Company website'),
        ),
        migrations.AddField(
            model_name='customer',
            name='address_primary',
            field=models.TextField(blank=True, help_text='Primary address (Home/Office)'),
        ),
        migrations.AddField(
            model_name='customer',
            name='address_secondary',
            field=models.TextField(blank=True, help_text='Secondary address (Mailing/Alternative)'),
        ),
        
        # Run data migration
        migrations.RunPython(migrate_old_fields_to_new, reverse_code=migrations.RunPython.noop),
        
        # Remove old fields
        migrations.RemoveField(
            model_name='customer',
            name='email',
        ),
        migrations.RemoveField(
            model_name='customer',
            name='phone',
        ),
        migrations.RemoveField(
            model_name='customer',
            name='company',
        ),
        migrations.RemoveField(
            model_name='customer',
            name='position',
        ),
        migrations.RemoveField(
            model_name='customer',
            name='address',
        ),
        migrations.RemoveField(
            model_name='customer',
            name='preferred_communication',
        ),
        
        # Create new communication preferences model
        migrations.CreateModel(
            name='CustomerCommunicationPreference',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('communication_type', models.CharField(choices=[('email_primary', 'Primary Email'), ('email_secondary', 'Secondary Email'), ('phone_primary', 'Primary Phone'), ('phone_secondary', 'Secondary Phone'), ('whatsapp', 'WhatsApp'), ('wechat', 'WeChat'), ('linkedin', 'LinkedIn'), ('facebook', 'Facebook'), ('twitter', 'Twitter/X'), ('instagram', 'Instagram'), ('fax', 'Fax')], max_length=20)),
                ('priority', models.IntegerField(choices=[(1, 'Primary'), (2, 'Secondary'), (3, 'Tertiary'), (4, 'Emergency Only'), (5, 'Do Not Use')], default=2)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.CharField(blank=True, help_text="e.g., 'Work hours only', 'Weekends preferred'", max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=models.CASCADE, related_name='communication_preferences', to='crm.customer')),
            ],
            options={
                'ordering': ['customer', 'priority', 'communication_type'],
            },
        ),
        migrations.AlterUniqueTogether(
            name='customercommunicationpreference',
            unique_together={('customer', 'communication_type')},
        ),
    ]
